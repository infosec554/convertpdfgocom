version: "3.8"

services:
  # -------- Gotenberg (PDF Converter) --------
  gotenberg:
    image: gotenberg/gotenberg:8
    restart: always
    expose:                # faqat ichki tarmoq uchun, tashqariga publish qilinmaydi
      - "3000"
    command: ["gotenberg", "--chromium-disable-javascript=true"]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/health"]
      interval: 10s
      timeout: 3s
      retries: 20

  # -------- Main App --------
  app:
    # image: ghcr.io/yourorg/convertpdfgo:latest   # prod uchun registrydan olish yaxshi
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./.env     # ⚠️ PROD’da bu faylni ishlatish o‘rniga SSM/SecretsManager’dan inject qil
    environment:
      GOTENBERG_URL: http://gotenberg:3000
      MIGRATIONS_DIR: /app/migrations/postgres
    volumes:
      - ./migrations:/app/migrations:ro
    ports:
      - "8080:8080"     # ALB shu portga yo‘naltiradi
    depends_on:
      gotenberg:
        condition: service_healthy
      # Local profil ishlaganda postgres/redis ham ishlatiladi
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 20

  # -------- Local Development: Postgres --------
  postgres:
    image: postgres:15
    restart: always
    profiles: ["local"]   # faqat local uchun ishlaydi
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: convertpdfgo
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d convertpdfgo -h 127.0.0.1 -p 5432"]
      interval: 5s
      timeout: 3s
      retries: 20

  # -------- Local Development: Redis --------
  redis:
    image: redis:7
    restart: always
    profiles: ["local"]
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "1234"]
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "1234", "PING"]
      interval: 5s
      timeout: 3s
      retries: 20

volumes:
  postgres_data:
  redis_data:
